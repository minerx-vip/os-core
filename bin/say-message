#!/usr/bin/env bash
# Sends messages to server

RETRY=3	## 重试次数
type=$1
data=$2
id=
payload=
debug=

## 判断第一个参数 type 是否为 info|ok|error|warn
if [[ $type != "info" && $type != "ok" && $type != "error" && $type != "warn" ]] || [[ -z $data || -z $type ]]; then
	echo "Usage: $0 info|ok|error|warn \"message\"|[--file=<path/name>] [--payload=<payload>] [--id=<msgid>] [-d|--debug]"
	exit 1
fi

## 不能同时指定 --payload 和 --file 参数
if [[ "$@" == *"--file"* && "$@" == *"--payload"* ]]; then
    echo "Cannot specify both --file and --payload"
    exit 1
fi


## 加载颜色
[[ -f /os/bin/colors ]] && source /os/bin/colors
[[ -f /hive/bin/colors ]] && source /hive/bin/colors

## 加载 rig.conf
RIG_CONF="/os/config/rig.conf"
[[ ! -f $RIG_CONF ]] && echo -e "No config $RIG_CONF" && exit 1
source $RIG_CONF

## 定义 API 地址
API="${server_url}/myos/receive/receiveData"

## 解析参数
for i in "$@"; do
	case $i in
		--id=*)
			id="${i#*=}"
			# id_json=`jq --arg id "$id" -n '{"params": {$id}}'`
			# request=`echo "$request $id_json" | jq -sc '.[0] * .[1]'`
		;;
		--file=*)
			data="file"
			file="${i#*=}"
			[[ ! -e $file ]] && echo "File not found: \"$file\"" && exit 1
			payload=`cat "$file" | gzip -9 --stdout | base64 -w 0`
			# payload_json=`cat "$file" | gzip -9 --stdout | base64 -w 0 | jq -R -s '{"params": {"payload": .}}'`
			# &&	request=`echo "$request $payload_json" | jq -sc '.[0] * .[1]'`
		;;
		--payload=*)
			payload="${i#*=}"
			payload=`echo ${payload} | gzip -9 --stdout | base64 -w 0`
		;;
		-d|--debug)
			debug="-v"
		;;
		*)
			# unknown option
		;;
	esac
done

## 赋默认值
[[ ${id} == "" ]] && id="-1"
[[ ${payload} == "" ]] && payload=""

## 构建请求体
request=$(
echo "$payload_json" | jq -n \
--arg rig_id "$rig_id" \
--arg farm_hash "$farm_hash" \
--arg type "$type" \
--arg data "$data" \
--arg cmd_id "$id" \
--arg payload "$payload" \
'{
	"method": "message", "jsonrpc": "2.0", "id": 0,
	"params": {$rig_id, $farm_hash, $type, $data, $cmd_id, $payload}
}'
)

## 发送请求
for(( try=0; try < RETRY; try++ )); do
	(( try > 0 )) && echo && sleep 2

	response=$(echo "$request" | curl --insecure -L --data @- --connect-timeout 7 --max-time 15 --silent \
			-w "\n%{http_code}\n" -XPOST "${API}" -H "Content-Type: application/json")
	exitcode=$?
	httpcode=$(echo "$response" | tail -1)
	response=$(echo "$response" | head -n -1)


	if [[ ! -z ${debug} ]];then
		echo "${CYAN}> Sending ${WHITE}$type${CYAN} to ${BCYAN}$API${NOCOLOR}"
		echo "request = $request"
		echo "exitcode = ${exitcode}, httpcode = ${httpcode}, response = ${response}"
	fi

	## 判断退出码
	if [[ $exitcode -ne 0 ]]; then
		echo "${RED}错误 Error: ${BRED}$(human-curl-error $exitcode)${NOCOLOR}"
		continue
	else
		echo "${GREEN}Sends messages to server OK${NOCOLOR}"
		break
	fi
done
