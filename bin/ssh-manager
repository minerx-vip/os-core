#!/usr/bin/env bash

# 默认SSH配置文件路径
SSHD_CONF=/etc/ssh/sshd_config

# 显示帮助信息
show_help() {
    echo "远程SSH管理工具"
    echo "用法: $(basename "$0") [选项]"
    echo "选项:"
    echo "  start     启动SSH远程访问"
    echo "  stop      停止SSH远程访问"
    echo "  status    查看SSH服务状态"
    echo "  -h, --help 显示此帮助信息"
}

# 检查SSH服务状态
ssh_status() {
    if systemctl is-active --quiet ssh.service; then
        local listen_address=$(grep -E '^ListenAddress' "$SSHD_CONF" 2>/dev/null || echo "ListenAddress not set")
        echo "SSH服务状态: 运行中"
        echo "监听地址: $listen_address"
    else
        echo "SSH服务状态: 未运行"
    fi
}

# 启动SSH远程访问
ssh_start() {

    ## 如果没有安装 openssh-server 则安装
    if ! systemctl is-active --quiet ssh.service; then
        apt-get update && apt-get install -y openssh-server
    fi

    ## 修改配置文件
	touch $SSHD_CONF
	sed -i '/ListenAddress/{s/.*/ListenAddress 0.0.0.0/;h};${x;/^$/{s//ListenAddress 0.0.0.0/;H};x}' $SSHD_CONF

	#delete doubles
	[[ `grep -c ListenAddress < $SSHD_CONF` -gt 1 ]] && sed -i '$!N; /^\(.*\)\n\1$/!P; D' $SSHD_CONF

	systemctl restart ssh.service
}

# 停止SSH远程访问
ssh_stop() {
	touch $SSHD_CONF
	sed -i '/ListenAddress/{s/.*/ListenAddress 127.0.0.1/;h};${x;/^$/{s//ListenAddress 127.0.0.1/;H};x}' $SSHD_CONF

	#delete doubles
	[[ `grep -c ListenAddress < $SSHD_CONF` -gt 1 ]] && sed -i '$!N; /^\(.*\)\n\1$/!P; D' $SSHD_CONF

	systemctl restart ssh.service
}

# 主函数
main() {
    # 检查是否以root用户运行
    if [[ $EUID -ne 0 ]]; then
        echo "错误: 此脚本需要以root权限运行"
        exit 1
    fi

    # 检查参数
    if [[ $# -eq 0 ]]; then
        show_help
        exit 0
    fi

    case "$1" in
        start)
            echo "正在启动SSH远程访问..."
            ssh_start
            echo "SSH远程访问已启动"
            ;;
        stop)
            echo "正在停止SSH远程访问..."
            ssh_stop
            echo "SSH远程访问已停止"
            ;;
        status)
            ssh_status
            ;;
        -h|--help)
            show_help
            ;;
        *)
            echo "错误: 未知选项 '$1'"
            show_help
            exit 1
            ;;
    esac
}

# 执行主函数
main "$@"
